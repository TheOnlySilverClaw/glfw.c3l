module glfw;

fn void defaultWindowHints() @extern("glfwDefaultWindowHints");

fn void windowHint(Hint hint, CInt value) @extern("glfwWindowHint");

fn void windowHintString(Hint hint, ZString value) @extern("glfwWindowHintString");


module glfw::window::hint;

distinct Hint = CInt;

def WindowAttribute = Hint;

const Hint FOCUSED = 0x00020001;
const Hint ICONIFIED = 0x00020002;
const WindowAttribute RESIZABLE = 0x00020003;
const Hint VISIBLE = 0x00020004;
const WindowAttribute DECORATED = 0x00020005;
const WindowAttribute AUTO_ICONIFY = 0x00020006;
const WindowAttribute FLOATING = 0x00020007;
const Hint MAXIMIZED = 0x00020008;
const Hint CENTER_CURSOR = 0x00020009;
const Hint TRANSPARENT_FRAMEBUFFER = 0x0002000A;
const Hint HOVERED = 0x0002000B;
const WindowAttribute FOCUS_ON_SHOW = 0x0002000C;
const WindowAttribute MOUSE_PASSTHROUGH = 0x0002000D;

const Hint POSITION_X = 0x0002000E;
const Hint POSITION_Y = 0x0002000F;

const Hint RED_BITS = 0x00021001;
const Hint GREEN_BITS = 0x00021002;
const Hint BLUE_BITS = 0x00021003;
const Hint ALPHA_BITS = 0x00021004;
const Hint DEPTH_BITS = 0x00021005;
const Hint STENCIL_BITS = 0x00021006;

const Hint ACCUM_RED_BITS = 0x00021007;
const Hint ACCUM_GREEN_BITS = 0x00021008;
const Hint ACCUM_BLUE_BITS = 0x00021009;
const Hint ACCUM_ALPHA_BITS = 0x0002100A;

const Hint LFW_AUX_BUFFERS = 0x0002100B;
const Hint STEREO = 0x0002100C;
const Hint SAMPLES = 0x0002100D;
const Hint SRGB_CAPABLE = 0x0002100E;
const Hint REFRESH_RATE = 0x0002100F;
const Hint DOUBLEBUFFER = 0x00021010;

const Hint CLIENT_API = 0x00022001;

const Hint CONTEXT_VERSION_MAJOR = 0x00022002;
const Hint CONTEXT_VERSION_MINOR = 0x00022003;
const Hint CONTEXT_REVISION = 0x00022004;

const Hint CONTEXT_ROBUSTNESS = 0x00022005;
const Hint OPENGL_FORWARD_COMPAT = 0x00022006;
const Hint CONTEXT_DEBUG = 0x00022007;
const Hint OPENGL_PROFILE = 0x00022008;
const Hint CONTEXT_RELEASE_BEHAVIOR = 0x00022009;
const Hint CONTEXT_NO_ERROR = 0x0002200A;
const Hint CONTEXT_CREATION_API = 0x0002200B;

const Hint SCALE_TO_MONITOR = 0x0002200C;
const Hint SCALE_FRAMEBUFFER = 0x0002200D;
const Hint GLFW_COCOA_RETINA_FRAMEBUFFER @deprecated = 0x00023001;

const Hint COCOA_FRAME_NAME = 0x00023002;
const Hint COCOA_GRAPHICS_SWITCHING = 0x00023003;

const Hint X11_CLASS_NAME = 0x00024001;
const Hint X11_INSTANCE_NAME = 0x00024002;

const Hint WIN32_KEYBOARD_MENU = 0x00025001;
const Hint WIN32_SHOWDEFAULT = 0x00025002;

const Hint WAYLAND_APP_ID = 0x00026001;


def ClientAPI = CInt;

const ClientAPI NO_API = 0;
const ClientAPI OPENGL = 0x00030001;
const ClientAPI OPENGL_ES = 0x00030002;

def Robustness = CInt;

const Robustness NO_ROBUSTNESS = 0;
const Robustness NO_RESET_NOTIFICATION = 0x00031001;
const Robustness LOSE_CONTEXT_ON_RESET = 0x00031002;

def OpenGLProfile = CInt;

const OpenGLProfile OPENGL_ANY_PROFILE = 0;
const OpenGLProfile OPENGL_CORE_PROFILE = 0x00032001;
const OpenGLProfile OPENGL_COMPAT_PROFILE = 0x00032002;

distinct ContextReleaseBehavior = CInt;

const ContextReleaseBehavior ANY_RELEASE_BEHAVIOR = 0;
const ContextReleaseBehavior RELEASE_BEHAVIOR_FLUSH = 0x00035001;
const ContextReleaseBehavior RELEASE_BEHAVIOR_NONE = 0x00035002;

distinct ContextCreationAPI = CInt;

const ContextCreationAPI NATIVE_CONTEXT_API = 0x00036001;
const ContextCreationAPI EGL_CONTEXT_API = 0x00036002;
const ContextCreationAPI OSMESA_CONTEXT_API = 0x00036003;

const ANY_POSITION = 0x80000000;